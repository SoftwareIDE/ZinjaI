If this is the first time you run ZinjaI, you can press F1 key to display help system and tutorials.
This release includes several improvements in debugging system (autocompletion in inspections grid, configurable signals handling, a new panel for direct communication with gdb, etc), in interface (reworked main windows' menus and several contextual menues, possibility to change code font, and more), and for GNU/Linux's automatic configuration (more terminal emulators are recognized automatically, and ZinjaI can install missing apps (such as gdb or gcc) in Debian based systems). Finally, as always, there are many bug-fixes and minor improvements everywhere. Read the <A href="help:ChangeLog.html">full changelog</A>.
These tips can be very anoying for some users. You can disable them by clicking the checkbox in to bottom of this window.

You can change code zoom quickly by scrolling mouse will with Ctrl key down, or pressin +/- key also with ctrl key down.
You can go to the line that generated a warning/error by double-clicking on it. ZinjaI will use a red (or yellow if its no sure) underline to show you the word the error make reference to.
You can move, or even detach from main window any panel ol toolbar just dragging them from its tilebar.
You can reorganize your tabs (files opened) just dragging them. You can also make visible more than one if you drag them to a window's border.
You can select a whole logic block (defined by braces) with the shortcut Ctrl+M.
If your program nees command line arguments, you can tell ZinjaI to ask you for them before every execution. To do that you must use the option "Always ask for arguments" from Compilation's and Execution's dialog (Run->Configure..., or Alt+F9)
You can quickly open a file that your code refer to (for instance, an include) placing the text cursor over it an pressing Ctrl+Intro.
You can share your code to other PCs over your LAN with the commands "Share" and "Open Shared" from "Tools" menu.
El arbol de simbolos (menu <I>Ver</I> o tecla <I>F2</I>) te permite listar todas las macros, clases y funciones definidas en tu programa. En el caso de las clases, el color de los inconos de sus metodos y atributos indica su alcance (rojo=privado, amarillo=protegido, verde=publico). Ademas puedes elegir incluir o no en el listado los simbolos de los archivos que incluye (mediante <I>#include</I>) tu fuente, haciendo click con el boton derecho sobre el arbol.
When you run a program with F9 key, if the source code was modified, it is saved a compiled again automatically before running. So, you should never need to do it yourself.
You can find and see macro definition from your code by placing the text cursor over its name and pressing Ctrl+F1..
You comment and uncomment lines with the shortcuts Ctrl+D and Ctrl+Shift+D (you don't need to select the whole line).
Puedes escribir tu código más rápida y cómodamente si actualizas el árbol de símbolos, ya que cuando se actualiza el árbol de símbolos, la información que se obtiene se utiliza también se utiliza para generar las ayudas de autocompletado y tips de llamadas a funciones. El árbol se actualiza al presionar la tecla <I>F2</I> o automáticamente al guardar o ejecutar el programa.
If your Symbol's Tree is up to date (F2 key), you can use Shit+F1 shortcut to obtain information about some elements defined in your code (global variables, classes, functions, macros).
Smart indention (<I>File-&gt;Preferences...-&gt;Writing-&gt;Smart indention) allows you to write code faster without thinking about indention. ZinjaI will decide how to indent your code will you write it. But if you already have bad intented code, you can select it and correct it automaticaly with <I>Ctrl+I</I>shortcut, or the item <I>Indent Selected Lines</I> from <I>Edit</I> menu.
Las herramientas de <I>Indentar bloque</I>, <I>Seleccionar bloque</I>, y las opciones de plegado de código pueden ser útiles para verificar si las llaves estan correctamente colocadas, por ejemplo, seleccionando o plegando un bloque para ver si concuerda con lo esperado.
Puedes identificar rapidamente todas las funciones de un archivo utilizando el plegado de codigo. Por ejemplo, presionando <I>Ctrl+1</I> puedes cerrar todas las clases y funciones y ver asi solo sus nombres. Presionando <I>Ctrl+2</I> puedes cerrar el segundo nivel (por ejemplo, todos los metodos implementados junto con la delcaración de la clase), etc. Para volver a desplegarlos utiliza <I>Alt+1</I>, <I>Alt+2</I>, etc. Para plegar o desplegar todos los niveles al mismo tiempo utilza <I>Ctrl+0</I> y <I>Alt+0</I> respectivamente.
ZinjaI can automatically find and add to your code with #include line you need for a keyword that represents a funcion, class or macro. To do that, place your text carret on the keywrod and press Ctrl+H.
Si pegas un bloque de codigo utilizando <I>Ctrl+C</I> teniendo la opcion <I>Corregir Indentado al Pegar</I> de la pestaña <I>Asitencias</I> del dialogo de <I>Preferencias</I>, ZinjaI ajusta automaticamente el indentando del bloque de codigo copiado de acuerdo al nuevo contexto en el cual es insertado.
You can open one or more files by draging them to ZinjaI's window.
You can highlight lines in your code with Ctrl+B keys. Later, you can go to highlighted lines very fast with Ctrl+Shift+B.
Para dirigirte rapidamente a la declaración de una clase/funcion/macro/metodo/atributo puedes invocar a la ayuda rápida (<I>Shift+F1</I>) y seleccionar el hipervinculo a la declaracion y/o definicion en la misma.
You can duplicate code lines just selecting them and pressing Ctrl+L (if its the current one, there is no need to select it). You can also delete them with Ctrl+Shift+L.
You can go to fullscreen mode and hide all panels with F11 key.
You can quickly go to a class/method/function definition with Ctrl+Shift+G shortcut.
You can quickly go to a file with Ctrl+Shift+F shortcut.
You can move some lines of code up or down with Ctrl+T and Ctrl+Shift+T shortcuts (to move just the current line, you don't need to select it).
You can force autocompletion menu with Ctrl+Space shortcut.
Puedes utilizar el panel del Explorador de Archivos (menu <I>Ver</I>), para acceder rápidamente al contenido de un directorio, y tener su árbol de archivos y subdirectorios siempre presente.
You can see the properties of your executable file (size, date, filetype, ...) with option "Executable File Properties" from "Tools" menu. In that window, you can also strip off debbuging symbols to reduce its size.
You can move to a symbol definition by clicking over its name in the source code holding Ctrl key down.
Puedes consultar la ayuda rápida sobre cualquier elemento del código fuente haciendo click sobre el mismo con la tecla <I>Alt</I> presionada, o utilizando el atajo de teclado <I>Alt+F1</I>.
You can walk through compilation's errors and warning with the shortcuts Ctrl+&lt; y Ctrl+&gt;.
Se cambiar la apariencia de <I>ZinjaI</I> utilizando un "tema" diferente (menú <I>Archivo</I>-&gt;<I>Preferencias...</I>-&gt;<I>Tema de Iconos</I>).

You can display a whole array or matrix, in a special dialog by clicking with right button over its inspection and selecting "Show in its own table" from the popup menu.
You can split one complex inspection (array, struct, class) into multiple sub-inspections that will represent its elements/attributes, by double-clicking on its value in inspection panel.
Puede explorar  una inspección de una estructura de datos (un arreglo, una clase, etc.) para observar su composición en una estrucutra jerárquica haciendo click con el botón derecho sobre la misma y seleccionando la opción "Explorar inspección".
You can set advanced breakpoint's properties by clicking on its mark (the red circle in the margin) holding Ctrl key.

This software is still under development. If you find a bug, or something you'd like to see changed, you can write to <I>zaskar_84@yahoo.com.ar</I>, or leave a message in <I>Contact</I> web site's section (<A href="http://zinjai.sourceforge.net">http://zinjai.sourceforge.net</A>).
If you have a direct internet conection you can check for updates by clicking the <I>Check for updates...</I> option in <I>Help</I> menu.

You can set shortcuts or toolbar buttons to launch your preferred tools or documents quickly from "Custom tools" submenu in "Tools" menu. <A href="help:custom_tools.html">Read more...</A>

If you dont want to see lateral and bottom panels all the time, you can make them hide automatically, leaving only their names visible, so you can unfold them by moving the mouse over those names. In order to try that, enable the option <I>Autohide Panels</I> from <I>General</I> section in <I>Preferences</I> dialog and restart <I>ZinjaI</I>.

You can type functions/methods' prototypes in a .h file and ask ZinjaI to generate automatically the asociated implemntation base code (empty methods/functions' definitions) with command "Implement missing Methods/Functions..." from "Tools" menu.
In a big or messy code, you can ask where you are (wich file, line, class, method, function) by hitting <I>Ctrl+Alt+Space</I> shortcut.
You can define <A href="help:autocode.html">autocodes</A> (pieces of code defined similar to C macros) and use them to speed up your writting without. ZinjaI will replace and expand them for you when you hit <I>Tab</I> key.
You can see <A href="help:autocode.html">autocodes</A> list or invoke autocode's autocompletion with <I>Ctrl+Shift+Space</I> shortcut.
You can close all code tabs but the active one with <I>Ctrl+Alt+W</I> shortcut.
In help you can find a table that summarizes most of the <A href="help:atajos.html">keyboard shorcuts</A> that you can try learn to develop faster.
You can find more information about <I>ZinjaI</I> and other projects in the blog <A href="http://cucarachasracing.blogspot.com.ar">http://cucarachasracing.blogspot.com.ar</A>.
You can change the current compilation and execution profile for your project with a right click on the compilation and execution's settings button from "Run" toolbar.

You can modify syntax highlighting colours to adapt ZinjaI to your own preferences. ZinjaI includes two predefined schemes, one for light background (white) and one for dark background (black), but you can change them to build your own scheme. To do that use the "Define colours..." button from "Style" tab in "Preferences" dialog (open this dialog from "File" menu).
On a debugging session, ZinjaI can present an special autocompletion menu for the expressions entered in the inspection table. You can invoke this feature by pressing TAB key after typing the first characters of your expression.
