Si es la primera vez que utiliza este entorno puede presionar la tecla F1 para acceder a la ayuda y los tutoriales.
Bienvenido a una nueva versión de ZinjaI. Entre las novedades se incluyen un mejor uso de las plantillas de programas simples (ahora se utilizan también al abrir un fuente), la posibilidad de generar y recorrer un historial de trazados inversos, nuevos comandos en el menú Depuración para avanzar paso a paso automáticamente, una forma simple y directa de buscar comandos y acciones de ZinjaI por palabra clave (ver menú Ayuda), y muchas otras mejores y correcciones. Vea la <A href="help:ChangeLog.html">lista completa de cambios</A>.
Estas sugerencias suelen ser molestas para muchos usuarios! <BR> Puedes desactivarlas haciendo click en el checkbox "<I>Mostrar sugerencias al inicio</I>" de esta misma ventana.

Puedes cambiar el tamaño del código rápidamente manteniendo presionada la tecla Control y girando la rueda del mouse, presionando la tecla <I>Control</I> y las teclas <I>+</I> o <I>-</I> del teclado numérico.
Puedes ir rápidamente a la línea que generó un error de compilación haciendo doble click sobre el mismo. Además, ZinjaI intentará subrayar en rojo o amarillo la palabra que generó el error.
Puedes cambiar de lugar, o incluso arrancar de la ventana principal cualquiera de los paneles o barras de herramientas simplementes arrastrandolos con el mouse desde su barra de título.
Puedes reacomodar las pestañas de los códigos arrastrandolas con el mouse. De esta forma, puedes incluso mostrar varios códigos al mismo tiempo si las arrastras hacia los bordes izquierdo, derecho o inferior del área de códigos.
Puedes seleccionar todo un bloque de codigo posicionando el cursor sobre la llave, el corchete o el paréntesis en el cual comienza o finaliza el mismo y presionando <I>Ctrl+M</I>.
Si tu programa recibe argumentos puedes hacer que ZinjaI solicite los argumentos que debe pasarle cada vez que lo ejecuta. Para ello debes tildar la opción "<I>Siempre pedir argumentos al ejecutar</I>" en el cuadro de opciones de ejecución y compilación (<I>Alt+F9</I>).;
Puedes abrir rápidamente un archivo al que hace referencia tu código (por ejemplo <I>#include "miclase.h"</I>) colocando el cursor sobre el mismo y presionando <I>Ctrl+Enter</I>.
Puedes compartir tu código con otras PCs a travez de la red con las opciones <I>Compartir...</I> y <I>Abrir compartido...</I> del menú <I>Herramientas</I>.
El arbol de simbolos (menu <I>Ver</I> o tecla <I>F2</I>) te permite listar todas las macros, clases y funciones definidas en tu programa. En el caso de las clases, el color de los inconos de sus metodos y atributos indica su alcance (rojo=privado, amarillo=protegido, verde=publico). Ademas puedes elegir incluir o no en el listado los simbolos de los archivos que incluye (mediante <I>#include</I>) tu fuente, haciendo click con el boton derecho sobre el arbol.
Cuando ejecutas tu programa con la opcion <I>Ejecutar</I> del menu <I>Ejecutar</I> o la tecla <I>F9</I>, si el codigo fue modificado, se guarda automaticamente en disco y se recompila antes de ser ejecutado. Si no fue modificado aun, pero si fue modificada alguna de las cabeceras no estandar que incluye, tambien se vuelve a compilar automaticamente antes de ser ejecutado, por lo cual no necesitas nunca compilar manualmente antes de ejecutar.
Puedes obtener rápidamente la definición de una macro declarada en algún fuente de tu proyecto ubicando el cursor de texto sobre la misma y presionando <I>Shift+F1</I>.
Puedes comentar y descomentar rapidamente un segmento de codigo seleccionandolo y presionando <I>Ctrl+D</I> y <I>Ctrl+Shit+D</I> respectivamente (no es necesario seleccionar las lineas completas).
Puedes escribir tu código más rápida y cómodamente si actualizas el árbol de símbolos, ya que cuando se actualiza el árbol de símbolos, la información que se obtiene se utiliza también se utiliza para generar las ayudas de autocompletado y tips de llamadas a funciones. El árbol se actualiza al presionar la tecla <I>F2</I> o automáticamente al guardar o ejecutar el programa.
Si tienes el arbol de simbolos actualizado, puedes utilizar las teclas de ayuda rapida <I>Shift+F1</I> para obtener informacion de tus macros, clases, funciones, atributos o miembros que hayas declarado en tu programa, ya que cuando el visor de ayuda rapida no encuentra la palabra buscada en la ayuda estandar la busca en el arbol de simbolos.
El indentado inteligente (<I>Archivo -&gt; Preferencias -&gt; Asistencias -&gt; Indentato Inteligente</I>) te permite escribir tu codigo sin preocuparte por la indentación del mismo, ya que ZinjaI resolverá donde colocarlo mientras lo escribes. Pero si ya tienes tu código escrito y no está correctamente indentado, puedes seleccionarlo y presionar <I>Ctrl+I</I> (o la opción <I>Indentar</I> del menú <I>Editar</I>).
Las herramientas de <I>Indentar bloque</I>, <I>Seleccionar bloque</I>, y las opciones de plegado de código pueden ser útiles para verificar si las llaves estan correctamente colocadas, por ejemplo, seleccionando o plegando un bloque para ver si concuerda con lo esperado.
Puedes identificar rapidamente todas las funciones de un archivo utilizando el plegado de codigo. Por ejemplo, presionando <I>Ctrl+1</I> puedes cerrar todas las clases y funciones y ver asi solo sus nombres. Presionando <I>Ctrl+2</I> puedes cerrar el segundo nivel (por ejemplo, todos los metodos implementados junto con la delcaración de la clase), etc. Para volver a desplegarlos utiliza <I>Alt+1</I>, <I>Alt+2</I>, etc. Para plegar o desplegar todos los niveles al mismo tiempo utilza <I>Ctrl+0</I> y <I>Alt+0</I> respectivamente.
<I>ZinjaI</I> puede agregar automaticamente la cabecera (la linea <I>#include &lt;...&gt;</I>) correspondiente a una funcion o clase si posiciona el cursor sobre la misma y presiona <I>Ctrl+H</I>.
Si pegas un bloque de codigo utilizando <I>Ctrl+C</I> teniendo la opcion <I>Corregir Indentado al Pegar</I> de la pestaña <I>Asitencias</I> del dialogo de <I>Preferencias</I>, ZinjaI ajusta automaticamente el indentando del bloque de codigo copiado de acuerdo al nuevo contexto en el cual es insertado.
Puedes abrir uno o más archivos arrastrandolos desde el explorador hacia la ventana de ZinjaI.
Para moverte rapidamente hacia una posición de interés dentro de un código puedes resaltar dicha linea con <I>Ctrl+B</I>, y luego, estando en cualquier otra parte del fuente, desplazarte rápidamente hacia esa linea utilizando <I>Ctrl+Shift+B</I>.
Para dirigirte rapidamente a la declaración de una clase/funcion/macro/metodo/atributo puedes invocar a la ayuda rápida (<I>Shift+F1</I>) y seleccionar el hipervinculo a la declaracion y/o definicion en la misma.
Puedes duplicar rapidamente un conjunto de lineas seleccionandolas y presionando <I>Ctrl+L</I> (no es necesario seleccionarlas completas). Tambien puedes eliminarlas utilizando <I>Ctlr+Shift+L</I>.
Puedes ocultar todos los paneles y las barras de herramienta y editar un fuente a pantalla completa presionando la tecla <I>F11</I>.
Puedes abrir rápidamente la definición de una clase, método o función presionando <I>Ctrl+Shift+G</I>.
Puedes ir rápidamente a un archivo abierto o perteneciente al proyecto presionando <I>Ctrl+Shift+F</I>.
Puedes mover un bloque de codigo rápidamente hacia arriba o hacia abajo presionando <I>Ctrl+T</I> o <I>Ctrl+Shift+T</I> respectivamente.
Puedes invocar manualmente al menú de autocompletado o la ayuda de llamadas a metodos y funciones presionando <I>Ctrl+Espacio</I>.
Puedes utilizar el panel del Explorador de Archivos (menu <I>Ver</I>), para acceder rápidamente al contenido de un directorio, y tener su árbol de archivos y subdirectorios siempre presente.
Puedes visualizar las propiedades del ejecutable compilado (tamaño, tipo de archivo, fecha, información de depuración) rápidamente utilizando la opción <I>Propiedades del Ejecutable...</I> del menú <I>Herramientas</I>. También puedes utilizar este cuadro para quitar la información de depuración del ejecutable y reducir así su tamaño.
Puedes ir rápidamente a la definición de una clase, un método o una función haciendo click con la tecla <I>Control</I> presionada sobre el nombre de la misma en código fuente.
Puedes consultar la ayuda rápida sobre cualquier elemento del código fuente haciendo click sobre el mismo con la tecla <I>Alt</I> presionada, o utilizando el atajo de teclado <I>Alt+F1</I>.
Se pueden recorrer los errores de compilación utilizando los atajos de teclado <I>Ctrl+&lt;</I> y <I>Ctrl+Shift+&lt;</I>.
Se puede cambiar la apariencia de <I>ZinjaI</I> utilizando un "tema" diferente (menú <I>Archivo</I>-&gt;<I>Preferencias...</I>-&gt;<I>Tema de Iconos</I>).

Puedes visualizar todo un vector, una matriz o una clase en una tabla haciendo click con el boton derecho del mouse sobre la misma en la tabla de inspecciones y seleccionando la opción "Mostrar en tabla separada".
Puede convertir una inspección de una estructura de datos (un arreglo, una clase, etc.) en múltiples inspecciones que representen sus elementos/atributos haciendo doble click sobre el valor de la misma en el panel de inspecciones.
Puede explorar  una inspección de una estructura de datos (un arreglo, una clase, etc.) para observar su composición en una estrucutra jerárquica haciendo click con el botón derecho sobre la misma y seleccionando la opción "Explorar inspección".
Se pueden definir las propiedades avanzadas de un breakpoint haciendo click sobre el mismo teniendo presionada la tecla control.

Este entorno aún se encuentra en desarrollo. Si encuentras un error o hay algo que te gustaría cambiar puedes escribir a <I>zaskar_84@yahoo.com.ar</I>, o dejar un mensaje en la sección <I>Contacto</I> del sitio web (<A href="http://zinjai.sourceforge.net/index.php?page=contacto.php">http://zinjai. 	net</A>).
Si tienes conexión directa a internet, <I>ZinjaI</I> puede verificar si existen nuevas versiones en su pagina web utilizando la opción <I>Buscar Actualizaciones...</I> del menú <I>Ayuda</I>.

Puedes definir atajos y botones en la barra de herramientas personalizados para acceder rápidamente a tus herramientas o documentos más útiles mediante el submenú "Herramientas personalizadas" del menú "Herramientas". <A href="help:custom_tools.html">Leer más...</A>

Si los paneles laterales e inferiores ocupan mucho espacio en tu pantalla puedes hacer que se oculten automaticamente dejanto solo el nombre visible para desplegarlos al pasar el mouse sobre el mismo. Para ello, selecciona la opcion <I>Ocultar Paneles Automaticamente</I> de la pestaña <I>General</I> del cuadro de <I>Preferencias</I> y reinicia <I>ZinjaI</I>.

Puedes agregar prototipos de funciones o metodos en un archivo .h y hacer que zinjai genere el codigo básico para las implementaciones (es decir, defina las funciones/métodos vacios en el .cpp) automáticamento con el comando "Implementar Métodos/Funciones Faltantes" del menú "Herramientas".
En un código largo o engorroso, puedes averiguar en qué archivo, linea función, método o clase estás presionado <I>Ctrl+Alt+Espacio</I>.
Se pueden definir <A href="help:autocode.html">auto-códigos</A> (fragmentos de código similires a las macros de C) para que ZinjaI remplace y extienda mientras escribes al presionar la tecla <I>Tab</I> ahorrándote valioso tiempo en la codificación.
Puedes ver rápidamente la lista de <A href="help:autocode.html">auto-códigos</A> disponibles, o invocar su autocompletado presionando <I>Ctrl+Shift+Espacio</I>.
Puedes cerrar todas las pestañas de código a excepción de la activa con el atajo <I>Ctrl+Alt+W</I>.
En la ayuda hay una tabla con la mayoría de los <A href="help:atajos.html">atajos de teclado</A> que puedes utilizar en ZinjaI para acelerar el desarrollo.
Puedes cambiar rápidamente el perfil de compilación y ejecución activo en un proyecto haciendo click derecho sobre el botón de Opciones de Compilación y Ejecución (Ejecución->Opciones) de la barra de herramientas "Ejecutar".
Puedes cambiar el esquema de colores con que ZinjaI resalta el código fuente para ajustarlos a tus preferencias. ZinjaI incluye dos perfiles predefinidos, uno para fondo claro (blanco) y uno para fondo oscuro (negro), pero puedes crear nuevos esquemas de colores y compartirlos. Para acceder a estas opciones utiliza la opción "Configurar esquema de colores..." del menú "Ver".
Puedes utilizar Alt+Derecha y Alt+Izquierda para saltar entre las últimas lineas de código sobre las que trabajaste. Por ejemplo, si saltas de una función a otra para corregir algo, puedes volver a la anterior con Alt+Izquierda.
Al hacer doble click sobre un identificador, este se resalta inmediatamente en todo el código para ver fácilmente donde se utiliza el mismo. Para quitar el resaltado simplemente debe hacer doble click en un espacio vacío. Puede evitar el resaltado configurando el perfil de colores.
ZinjaI puede proporcionar un autocompletado especial para la grilla de inspecciones si presiona la tecla TAB luego de haber ingresado parte de la expresión, durante una pausa en la depuración.
Puedes cambiar los atajos de teclado desde la pestaña "General" del cuadro de diálog "Preferencias" (menú "Archivo"->"Preferencias...").
La inicialización de ZinjaI finaliza en cuanto se muestra la ventana principal. Si esto ocurre muy rápidamente, puede que la pantalla anunciadora (splash) siga visible por unos segundos más. Puedes hacer click sobre la misma para ocultarla y comenzar a trabajar inmediatamente.
Puedes observar cómo el preprocesador expande un linea que contiene constantes o funciones de preprocesador presionando <I>Ctrl+Shift+M</I>.
Puedes editar todas las ocurrencias de un identificador en un bloque de código resaltándolo primero (con doble click sobre el mismo), y luego seleccionando el bloque y presionando <I>Alt+Shift+Enter</I> (o desde el menú contextual).
ZinjaI puede generar la declaración o definición de una función a partir de una invocación de la misma escribiendo primero la invocación, haciendo luego click derecho sobre el nombre de la misma y seleccionando la opción <I>Generar definición/declaración de función a partir de llamada</I>.
Presionando <I>Ctrl+Shit+X</I> puedes acceder a un menú contextual con comandos del submenú de generación de código del menú <I>Herramientas</I>.
Puedes encontrar información sobre la historia y el desarrollo de ZinjaI, las próximas versiones y otros contenidos relacionados al proyecto y a la programación con C++ en el blog <A href="http://cucarachasracing.blogspot.com.ar/>http://cucarachasracing.blogspot.com.ar/</A>
Puedes enterarte de las actualizaciones y otras noticias importantes en relación a ZinjaI siguiendo la cuenta oficial del proyecto en twitter: <A href="http://twitter.com/zaskar_84">@zaskar_84</A>
No hace falta pausar la ejecución para colocar, quitar, habilitar o deshabilitar puntos de interrupción durante la depuración.
Puedes definir puntos de interrupción especiales en los que ZinjaI solo actualice las inspecciones pero no pause la ejecución. Para ello, debes cambiar el campo <I>Acción</I> en las opciones de un breakpoint (<I>Shift+Click</I> en el márgen izquierdo del código, o <I>Ctrl+F8</I>).
ZinjaI puede filtrar los resultados para mostrar en el menú de autocompletado de tres formas distintas: mostrando aquellos que comienzan igual que la parte ya tipeada del identificador, mostrando todos los que contengan la parte tipeada como subcadena (en cualquier posición), o mostrando todos los que contenga una subcadena igual o similar (esta opción tolera unos pocos errores de tipeo). Se puede cambiar el método a utilizar desde la pestaña <I>Asistencias</I> del cuadro de diálogo de <I>Preferencias</I>.
Al abrir un proyecto, lo que más tiempo le toma a ZinjaI antes de que el programador pueda empezar a trabajar, es la carga de los fuentes abiertos. Si mantiene el número de pestañas de código abiertas relativamente bajo, el proyecto se cargará mucho más rápido y podrá empezar a trabajar antes.
