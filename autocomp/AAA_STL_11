<unordered_set>
	bool operator!=(const unordered_multiset<Key,Hash,Pred,Alloc> &,const unordered_multiset<Key,Hash,Pred,Alloc> &)
	bool operator==(const unordered_multiset<Key,Hash,Pred,Alloc> &,const unordered_multiset<Key,Hash,Pred,Alloc> &)
	bool operator!=(const unordered_set<Key,Hash,Pred,Alloc> &,const unordered_set<Key,Hash,Pred,Alloc> &)
	bool operator==(const unordered_set<Key,Hash,Pred,Alloc> &,const unordered_set<Key,Hash,Pred,Alloc> &)
	void swap(unordered_multiset<Key,Hash,Pred,Alloc> &,unordered_multiset<Key,Hash,Pred,Alloc> &)
	void swap(unordered_set<Key,Hash,Pred,Alloc> &,unordered_set<Key,Hash,Pred,Alloc> &)
	const_local_iterator
	local_iterator
	const_iterator
	iterator
	difference_type
	size_type
	const_reference
	reference
	const_pointer
	pointer
	allocator_type
	key_equal
	hasher
	value_type
	key_type
	class unordered_multiset
		unordered_multiset operator
		unordered_multiset & operator
		void reserve (size_type)
		void rehash (size_type)
		void max_load_factor (float)
		const_local_iterator cend (size_type)
		const_local_iterator cbegin (size_type)
		const_local_iterator end (size_type)
		local_iterator end (size_type)
		const_local_iterator begin (size_type)
		local_iterator begin (size_type)
		size_type bucket (const key_type &)
		size_type bucket_size (size_type)
		std::pair<const_iterator,const_iterator> equal_range (const key_type &)
		std::pair<iterator,iterator> equal_range (const key_type &)
		size_type count (const key_type &)
		const_iterator find (const key_type &)
		iterator find (const key_type &)
		key_equal key_eq ()
		hasher hash_function ()
		void swap (unordered_multiset &)
		iterator erase (const_iterator,const_iterator)
		size_type erase (const key_type &)
		iterator erase (const_iterator)
		void insert (initializer_list<value_type>)
		void template<class InputIterator> insert (InputIterator,InputIterator)
		iterator insert (const_iterator,value_type)
		iterator insert (const_iterator,const value_type &)
		iterator insert (value_type)
		iterator insert (const value_type &)
		iterator emplace_hint (const_iterator,Args,...)
		iterator emplace (Args,...)
		~unordered_multiset ()
		unordered_multiset (initializer_list<value_type>,size_type,const hasher &,const key_equal &,const allocator_type &)
		unordered_multiset (unordered_multiset,const Allocator &)
		unordered_multiset (const unordered_multiset &,const Allocator &)
		unordered_multiset (const Allocator &)
		unordered_multiset (unordered_multiset)
		unordered_multiset (const unordered_multiset &)
		unordered_multiset (InputIterator,InputIterator,size_type,const hasher &,const key_equal &,const allocator_type &)
		unordered_multiset (size_type,const hasher &,const key_equal &,const allocator_type &)
	class unordered_set
		unordered_set & operator
		void reserve (size_type)
		void rehash (size_type)
		void max_load_factor (float)
		const_local_iterator cend (size_type)
		const_local_iterator cbegin (size_type)
		const_local_iterator end (size_type)
		local_iterator end (size_type)
		const_local_iterator begin (size_type)
		local_iterator begin (size_type)
		size_type bucket (const key_type &)
		size_type bucket_size (size_type)
		std::pair<const_iterator,const_iterator> equal_range (const key_type &)
		std::pair<iterator,iterator> equal_range (const key_type &)
		size_type count (const key_type &)
		const_iterator find (const key_type &)
		iterator find (const key_type &)
		key_equal key_eq ()
		hasher hash_function ()
		void swap (unordered_set &)
		iterator erase (const_iterator,const_iterator)
		size_type erase (const key_type &)
		iterator erase (const_iterator)
		void insert (initializer_list<value_type>)
		void template<class InputIterator> insert (InputIterator,InputIterator)
		iterator insert (const_iterator,value_type)
		iterator insert (const_iterator,const value_type &)
		pair<iterator,bool> insert (value_type)
		pair<iterator,bool> insert (const value_type &)
		iterator emplace_hint (const_iterator,Args,...)
		pair<iterator,bool> emplace (Args,...)
		~unordered_set ()
		unordered_set (initializer_list<value_type>,size_type,const hasher &,const key_equal &,const allocator_type &)
		unordered_set (unordered_set,const Allocator &)
		unordered_set (const unordered_set &,const Allocator &)
		unordered_set (const Allocator &)
		unordered_set (unordered_set)
		unordered_set (const unordered_set &)
		unordered_set (InputIterator,InputIterator,size_type,const hasher &,const key_equal &,const allocator_type &)
		unordered_set (size_type,const hasher &,const key_equal &,const allocator_type &)
<unordered_map>
	bool operator!=(const unordered_multimap<Key,T,Hash,Pred,Alloc> &,const unordered_multimap<Key,T,Hash,Pred,Alloc> &)
	bool operator==(const unordered_multimap<Key,T,Hash,Pred,Alloc> &,const unordered_multimap<Key,T,Hash,Pred,Alloc> &)
	bool operator!=(const unordered_map<Key,T,Hash,Pred,Alloc> &,const unordered_map<Key,T,Hash,Pred,Alloc> &)
	bool operator==(const unordered_map<Key,T,Hash,Pred,Alloc> &,const unordered_map<Key,T,Hash,Pred,Alloc> &)
	void swap(unordered_multimap<Key,T,Hash,Pred,Alloc> &,unordered_multimap<Key,T,Hash,Pred,Alloc> &)
	void swap(unordered_map<Key,T,Hash,Pred,Alloc> &,unordered_map<Key,T,Hash,Pred,Alloc> &)
	class unordered_multimap
		unordered_multimap & operator
		void reserve (size_type)
		void rehash (size_type)
		void max_load_factor (float)
		const_local_iterator cend (size_type)
		const_local_iterator cbegin (size_type)
		const_local_iterator end (size_type)
		local_iterator end (size_type)
		const_local_iterator begin (size_type)
		local_iterator begin (size_type)
		size_type bucket (const key_type &)
		size_type bucket_size (size_type)
		std::pair<const_iterator,const_iterator> equal_range (const key_type &)
		std::pair<iterator,iterator> equal_range (const key_type &)
		size_type count (const key_type &)
		const_iterator find (const key_type &)
		iterator find (const key_type &)
		key_equal key_eq ()
		hasher hash_function ()
		void swap (unordered_multimap &)
		iterator erase (const_iterator,const_iterator)
		size_type erase (const key_type &)
		iterator erase (const_iterator)
		void insert (initializer_list<value_type>)
		void template<class InputIterator> insert (InputIterator,InputIterator)
		iterator insert (const_iterator,P)
		iterator insert (const_iterator,const value_type &)
		iterator insert (P)
		iterator insert (const value_type &)
		iterator emplace_hint (const_iterator,Args,...)
		iterator emplace (Args,...)
		~unordered_multimap ()
		unordered_multimap (initializer_list<value_type>,size_type,const hasher &,const key_equal &,const allocator_type &)
		unordered_multimap (unordered_multimap,const Allocator &)
		unordered_multimap (const unordered_multimap &,const Allocator &)
		unordered_multimap (const Allocator &)
		unordered_multimap (unordered_multimap)
		unordered_multimap (const unordered_multimap &)
		unordered_multimap (InputIterator,InputIterator,size_type,const hasher &,const key_equal &,const allocator_type &)
		unordered_multimap (size_type,const hasher &,const key_equal &,const allocator_type &)
	class unordered_map
		mapped_type &[]() operator
		unordered_map & operator
		void reserve (size_type)
		void rehash (size_type)
		void max_load_factor (float)
		const_local_iterator cend (size_type)
		const_local_iterator cbegin (size_type)
		const_local_iterator end (size_type)
		local_iterator end (size_type)
		const_local_iterator begin (size_type)
		local_iterator begin (size_type)
		size_type bucket (const key_type &)
		size_type bucket_size (size_type)
		const mapped_type & at (const key_type &)
		mapped_type & at (const key_type &)
		std::pair<const_iterator,const_iterator> equal_range (const key_type &)
		std::pair<iterator,iterator> equal_range (const key_type &)
		size_type count (const key_type &)
		const_iterator find (const key_type &)
		iterator find (const key_type &)
		key_equal key_eq ()
		hasher hash_function ()
		void swap (unordered_map &)
		iterator erase (const_iterator,const_iterator)
		size_type erase (const key_type &)
		iterator erase (const_iterator)
		void insert (initializer_list<value_type>)
		void template<class InputIterator> insert (InputIterator,InputIterator)
		iterator insert (const_iterator,P)
		iterator insert (const_iterator,const value_type &)
		pair<iterator,bool> insert (P)
		pair<iterator,bool> insert (const value_type &)
		iterator emplace_hint (const_iterator,Args,...)
		pair<iterator,bool> emplace (Args,...)
		~unordered_map ()
		unordered_map (initializer_list<value_type>,size_type,const hasher &,const key_equal &,const allocator_type &)
		unordered_map (unordered_map,const Allocator &)
		unordered_map (const unordered_map &,const Allocator &)
		unordered_map (const Allocator &)
		unordered_map (unordered_map)
		unordered_map (const unordered_map &)
		unordered_map (InputIterator,InputIterator,size_type,const hasher &,const key_equal &,const allocator_type &)
		unordered_map (size_type,const hasher &,const key_equal &,const allocator_type &)
<forward_list>
	void swap(forward_list<T,Allocator> &,forward_list<T,Allocator> &)
	bool operator<=(const forward_list<T,Allocator> &,const forward_list<T,Allocator> &)
	bool operator>=(const forward_list<T,Allocator> &,const forward_list<T,Allocator> &)
	bool operator>(const forward_list<T,Allocator> &,const forward_list<T,Allocator> &)
	bool operator!=(const forward_list<T,Allocator> &,const forward_list<T,Allocator> &)
	bool operator<(const forward_list<T,Allocator> &,const forward_list<T,Allocator> &)
	bool operator==(const forward_list<T,Allocator> &,const forward_list<T,Allocator> &)
	class forward_list
		forward_list & operator
		forward_list<T,Allocator> & operator
		void template<class Compare> sort (Compare)
		void sort ()
		void template<class Compare> merge (forward_list<T,Allocator>,Compare)
		void template<class Compare> merge (forward_list<T,Allocator> &,Compare)
		void merge (forward_list<T,Allocator>)
		void merge (forward_list<T,Allocator> &)
		void template<class BinaryPredicate> unique (BinaryPredicate)
		void unique ()
		void template<class Predicate> remove_if (Predicate)
		void remove (const T &)
		void splice_after (const_iterator,forward_list<T,Allocator>,const_iterator,const_iterator)
		void splice_after (const_iterator,forward_list<T,Allocator> &,const_iterator,const_iterator)
		void splice_after (const_iterator,forward_list<T,Allocator>,const_iterator)
		void splice_after (const_iterator,forward_list<T,Allocator> &,const_iterator)
		void splice_after (const_iterator,forward_list<T,Allocator>)
		void splice_after (const_iterator,forward_list<T,Allocator> &)
		void resize (size_type,const value_type &)
		void resize (size_type)
		void swap (forward_list<T,Allocator> &)
		iterator erase_after (const_iterator,iterator)
		iterator erase_after (const_iterator)
		iterator insert_after (const_iterator,initializer_list<T>)
		iterator insert_after (const_iterator,InputIterator,InputIterator)
		iterator insert_after (const_iterator,size_type,const T &)
		iterator insert_after (const_iterator,T)
		iterator insert_after (const_iterator,const T &)
		iterator emplace_after (const_iterator,Args,...)
		void pop_front ()
		void push_front (T)
		void push_front (const T &)
		void template<class...Args> emplace_front (Args,...)
		const_reference front ()
		reference front ()
		void assign (initializer_list<T>)
		void assign (size_type,const T &)
		void template<class InputIterator> assign (InputIterator,InputIterator)
		~forward_list ()
		forward_list (initializer_list<T>,const Allocator &)
		forward_list (forward_list,const Allocator &)
		forward_list (const forward_list &,const Allocator &)
		forward_list (forward_list)
		forward_list (const forward_list<T,Allocator> &)
		forward_list (InputIterator,InputIterator,const Allocator &)
		forward_list (size_type,const T &,const Allocator &)
		forward_list (size_type)
		forward_list (const Allocator &)
<array>
	void noexcept () noexcept(x)
	bool operator>=(const array<T,N> &,const array<T,N> &)
	bool operator<=(const array<T,N> &,const array<T,N> &)
	bool operator>(const array<T,N> &,const array<T,N> &)
	bool operator<(const array<T,N> &,const array<T,N> &)
	bool operator!=(const array<T,N> &,const array<T,N> &)
	bool operator==(const array<T,N> &,const array<T,N> &)
	const_reverse_iterator
	reverse_iterator
	class array
		T [] elems
		const_reference back ()
		reference back ()
		const_reference front ()
		reference front ()
		reference at (size_type)
		const_reference at (size_type)
		const_reference operator[] (size_type)
		reference operator[] (size_type)
		void fill (const T &)
